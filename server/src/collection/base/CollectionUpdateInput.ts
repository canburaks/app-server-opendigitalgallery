/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsJSON,
  IsOptional,
  IsString,
  ValidateNested,
  IsEnum,
} from "class-validator";
import { GraphQLJSONObject } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { ProductUpdateManyWithoutCollectionsInput } from "./ProductUpdateManyWithoutCollectionsInput";
import { Type } from "class-transformer";
import { EnumCollectionStatus } from "./EnumCollectionStatus";
import { TagUpdateManyWithoutCollectionsInput } from "./TagUpdateManyWithoutCollectionsInput";
@InputType()
class CollectionUpdateInput {
  @ApiProperty({
    required: false,
  })
  @IsJSON()
  @IsOptional()
  @Field(() => GraphQLJSONObject, {
    nullable: true,
  })
  data?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  handle?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsJSON()
  @IsOptional()
  @Field(() => GraphQLJSONObject, {
    nullable: true,
  })
  image?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  metaDescription?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  metaTitle?: string | null;

  @ApiProperty({
    required: false,
    type: () => ProductUpdateManyWithoutCollectionsInput,
  })
  @ValidateNested()
  @Type(() => ProductUpdateManyWithoutCollectionsInput)
  @IsOptional()
  @Field(() => ProductUpdateManyWithoutCollectionsInput, {
    nullable: true,
  })
  products?: ProductUpdateManyWithoutCollectionsInput;

  @ApiProperty({
    required: false,
    enum: EnumCollectionStatus,
    isArray: true,
  })
  @IsEnum(EnumCollectionStatus, {
    each: true,
  })
  @IsOptional()
  @Field(() => [EnumCollectionStatus], {
    nullable: true,
  })
  status?: Array<"Archived" | "Active" | "Draft">;

  @ApiProperty({
    required: false,
    type: () => TagUpdateManyWithoutCollectionsInput,
  })
  @ValidateNested()
  @Type(() => TagUpdateManyWithoutCollectionsInput)
  @IsOptional()
  @Field(() => TagUpdateManyWithoutCollectionsInput, {
    nullable: true,
  })
  tags?: TagUpdateManyWithoutCollectionsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  title?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsJSON()
  @IsOptional()
  @Field(() => GraphQLJSONObject, {
    nullable: true,
  })
  translations?: InputJsonValue;
}
export { CollectionUpdateInput };
