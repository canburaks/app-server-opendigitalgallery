/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { Artist } from "../../artist/base/Artist";
import {
  ValidateNested,
  IsOptional,
  IsString,
  IsDate,
  IsJSON,
  IsBoolean,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { Collection } from "../../collection/base/Collection";
import { GraphQLJSONObject } from "graphql-type-json";
import { JsonValue } from "type-fest";
import { EnumProductOrientation } from "./EnumProductOrientation";
import { EnumProductStatus } from "./EnumProductStatus";
import { Tag } from "../../tag/base/Tag";
import { Variant } from "../../variant/base/Variant";
@ObjectType()
class Product {
  @ApiProperty({
    required: false,
    type: () => Artist,
  })
  @ValidateNested()
  @Type(() => Artist)
  @IsOptional()
  artist?: Artist | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  artistName!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  artistWikidata!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  artworkWikidata!: string | null;

  @ApiProperty({
    required: false,
    type: () => [Collection],
  })
  @ValidateNested()
  @Type(() => Collection)
  @IsOptional()
  collections?: Array<Collection>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description!: string | null;

  @ApiProperty({
    required: false,
  })
  @IsJSON()
  @IsOptional()
  @Field(() => GraphQLJSONObject, {
    nullable: true,
  })
  featuredImage!: JsonValue;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  handle!: string | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  hasOnlyDefaultVariant!: boolean | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
  })
  @IsJSON()
  @IsOptional()
  @Field(() => GraphQLJSONObject, {
    nullable: true,
  })
  images!: JsonValue;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  metaDescription!: string | null;

  @ApiProperty({
    required: false,
  })
  @IsJSON()
  @IsOptional()
  @Field(() => GraphQLJSONObject, {
    nullable: true,
  })
  metafields!: JsonValue;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  metaTitle!: string | null;

  @ApiProperty({
    required: false,
    enum: EnumProductOrientation,
    isArray: true,
  })
  @IsEnum(EnumProductOrientation, {
    each: true,
  })
  @IsOptional()
  @Field(() => [EnumProductOrientation], {
    nullable: true,
  })
  orientation?: Array<"Horizontal" | "Vertical">;

  @ApiProperty({
    required: false,
    enum: EnumProductStatus,
    isArray: true,
  })
  @IsEnum(EnumProductStatus, {
    each: true,
  })
  @IsOptional()
  @Field(() => [EnumProductStatus], {
    nullable: true,
  })
  status?: Array<"Archived" | "Active" | "Draft">;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  storefrontId!: string | null;

  @ApiProperty({
    required: false,
    type: () => [Tag],
  })
  @ValidateNested()
  @Type(() => Tag)
  @IsOptional()
  tags?: Array<Tag>;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  title!: string | null;

  @ApiProperty({
    required: false,
  })
  @IsJSON()
  @IsOptional()
  @Field(() => GraphQLJSONObject, {
    nullable: true,
  })
  translations!: JsonValue;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: false,
    type: () => [Variant],
  })
  @ValidateNested()
  @Type(() => Variant)
  @IsOptional()
  variants?: Array<Variant>;
}
export { Product };
