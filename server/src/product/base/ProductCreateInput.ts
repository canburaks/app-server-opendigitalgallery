/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { ArtistWhereUniqueInput } from "../../artist/base/ArtistWhereUniqueInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  IsJSON,
  IsBoolean,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { CollectionCreateNestedManyWithoutProductsInput } from "./CollectionCreateNestedManyWithoutProductsInput";
import { GraphQLJSONObject } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { EnumProductOrientation } from "./EnumProductOrientation";
import { EnumProductStatus } from "./EnumProductStatus";
import { TagCreateNestedManyWithoutProductsInput } from "./TagCreateNestedManyWithoutProductsInput";
import { VariantCreateNestedManyWithoutProductsInput } from "./VariantCreateNestedManyWithoutProductsInput";
@InputType()
class ProductCreateInput {
  @ApiProperty({
    required: false,
    type: () => ArtistWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ArtistWhereUniqueInput)
  @IsOptional()
  @Field(() => ArtistWhereUniqueInput, {
    nullable: true,
  })
  artist?: ArtistWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  artistName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  artistWikidata?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  artworkWikidata?: string | null;

  @ApiProperty({
    required: false,
    type: () => CollectionCreateNestedManyWithoutProductsInput,
  })
  @ValidateNested()
  @Type(() => CollectionCreateNestedManyWithoutProductsInput)
  @IsOptional()
  @Field(() => CollectionCreateNestedManyWithoutProductsInput, {
    nullable: true,
  })
  collections?: CollectionCreateNestedManyWithoutProductsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsJSON()
  @IsOptional()
  @Field(() => GraphQLJSONObject, {
    nullable: true,
  })
  featuredImage?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  handle?: string | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  hasOnlyDefaultVariant?: boolean | null;

  @ApiProperty({
    required: false,
  })
  @IsJSON()
  @IsOptional()
  @Field(() => GraphQLJSONObject, {
    nullable: true,
  })
  images?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  metaDescription?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsJSON()
  @IsOptional()
  @Field(() => GraphQLJSONObject, {
    nullable: true,
  })
  metafields?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  metaTitle?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumProductOrientation,
    isArray: true,
  })
  @IsEnum(EnumProductOrientation, {
    each: true,
  })
  @IsOptional()
  @Field(() => [EnumProductOrientation], {
    nullable: true,
  })
  orientation?: Array<"Horizontal" | "Vertical">;

  @ApiProperty({
    required: false,
    enum: EnumProductStatus,
    isArray: true,
  })
  @IsEnum(EnumProductStatus, {
    each: true,
  })
  @IsOptional()
  @Field(() => [EnumProductStatus], {
    nullable: true,
  })
  status?: Array<"Archived" | "Active" | "Draft">;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  storefrontId?: string | null;

  @ApiProperty({
    required: false,
    type: () => TagCreateNestedManyWithoutProductsInput,
  })
  @ValidateNested()
  @Type(() => TagCreateNestedManyWithoutProductsInput)
  @IsOptional()
  @Field(() => TagCreateNestedManyWithoutProductsInput, {
    nullable: true,
  })
  tags?: TagCreateNestedManyWithoutProductsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  title?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsJSON()
  @IsOptional()
  @Field(() => GraphQLJSONObject, {
    nullable: true,
  })
  translations?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: () => VariantCreateNestedManyWithoutProductsInput,
  })
  @ValidateNested()
  @Type(() => VariantCreateNestedManyWithoutProductsInput)
  @IsOptional()
  @Field(() => VariantCreateNestedManyWithoutProductsInput, {
    nullable: true,
  })
  variants?: VariantCreateNestedManyWithoutProductsInput;
}
export { ProductCreateInput };
